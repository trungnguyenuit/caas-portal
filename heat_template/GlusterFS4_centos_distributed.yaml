heat_template_version: 2017-02-24
description: Gluster FS 4.0 Distributed
#                                   |
# +----------------------+          |          +----------------------+
# | [GlusterFS Server#1] |IP        |        IP| [GlusterFS Server#2] |
# |                      +----------+----------+                      |
# +----------------------+                     +----------------------+
# Cac node trust lan nhau 
parameters:
  key_name:
    type: string
    label: Enter keypair
    description: keypair
  image:
    type: string
    label: Enter image name
    description: image
    default: centos7-software-config-hostname
  flavor:
    type: string
    label: Enter flavor
    description: flavor
  network:
    type: string
    label: Enter network name or ID
    description: network 
    default: external

resources:
#----------------------------------------INSTALL GLUSTERFS PACKAGE---------------------------------------------
  distributed_node_install:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      config: |
        #!/bin/sh -x
        yum -y install centos-release-gluster40
        sed -i -e "s/enabled=1/enabled=0/g" /etc/yum.repos.d/CentOS-Gluster-4.0.repo
        yum --enablerepo=centos-gluster40 -y install glusterfs-server
        systemctl start glusterd 
        systemctl enable glusterd 
        setsebool -P nis_enabled on
        mkdir /glusterfs
        mkdir /glusterfs/distributed 

  dist_node1_install:
    type: OS::Heat::SoftwareDeployment
    properties:
      config:
        get_resource: distributed_node_install
      server:
        get_resource: dist_node1

  dist_node2_install:
    type: OS::Heat::SoftwareDeployment
    properties:
      config:
        get_resource: distributed_node_install
      server:
        get_resource: dist_node2

  dist_node3_install:
    type: OS::Heat::SoftwareDeployment
    properties:
      config:
        get_resource: distributed_node_install
      server:
        get_resource: dist_node3
#----------------------------------------DEPLOYING CONFIGURATION-------------------------------------
  distributed_node_config:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      inputs:
      - name: dist_add1_ipaddr
      - name: dist_add2_ipaddr
      config: |
        #!/bin/sh -x
        gluster peer probe $dist_add1_ipaddr >> /output.txt
        gluster peer probe $dist_add2_ipaddr >> /output.txt
        gluster peer status >> /output.txt
        gluster volume create vol_distributed transport tcp \
        $dist_add1_ipaddr:/glusterfs/distributed \
        $dist_add2_ipaddr:/glusterfs/distributed force >> /output.txt
        gluster volume start vol_distributed >> /output.txt
        gluster volume info >> /output.txt

  dist_node1_deployment:
    type: OS::Heat::SoftwareDeployment
    depends_on: dist_node1_install
    properties:
      config:
        get_resource: distributed_node_config
      server:
        get_resource: dist_node1
      input_values:
        dist_add1_ipaddr: {get_attr: [dist_node2, first_address]}
        dist_add2_ipaddr: {get_attr: [dist_node3, first_address]}

  dist_node2_deployment:
    type: OS::Heat::SoftwareDeployment
    depends_on: dist_node2_install
    properties:
      config:
        get_resource: distributed_node_config
      server:
        get_resource: dist_node2
      input_values:
        dist_add1_ipaddr: {get_attr: [dist_node1, first_address]}
        dist_add2_ipaddr: {get_attr: [dist_node3, first_address]}

  dist_node3_deployment:
    type: OS::Heat::SoftwareDeployment
    depends_on: dist_node3_install
    properties:
      config:
        get_resource: distributed_node_config
      server:
        get_resource: dist_node3
      input_values:
        dist_add1_ipaddr: {get_attr: [dist_node1, first_address]}
        dist_add2_ipaddr: {get_attr: [dist_node2, first_address]}
#----------------------------------------SERVERS---------------------------------------------
  dist_node1:
    type: OS::Nova::Server
    properties:
      key_name: {get_param: key_name}
      image: {get_param: image}
      flavor: {get_param: flavor}
      networks:
        - network: {get_param: network}
      user_data_format: SOFTWARE_CONFIG

  dist_node2:
    type: OS::Nova::Server
    properties:
      key_name: {get_param: key_name}
      image: {get_param: image}
      flavor: {get_param: flavor}
      networks:
        - network: {get_param: network}
      user_data_format: SOFTWARE_CONFIG

  dist_node3:
    type: OS::Nova::Server
    properties:
      key_name: {get_param: key_name}
      image: {get_param: image}
      flavor: {get_param: flavor}
      networks:
        - network: {get_param: network}
      user_data_format: SOFTWARE_CONFIG

outputs:
  Distributed_node1_IP:
      value: {get_attr: [dist_node1, first_address]}
  Distributed_node2_IP:
      value: {get_attr: [dist_node2, first_address]}
  Distributed_node3_IP:
      value: {get_attr: [dist_node3, first_address]}